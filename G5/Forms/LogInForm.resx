<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>